name: Build
on: push
jobs:
  build-for-linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python_version: ['3.8', '3.13']
    steps:
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install Python packages
        run: pip${{ matrix.python_version }} install auditwheel build twine
      - name: Install patchelf
        run: |
            cd /home/runner/work
            mkdir patchelf
            cd patchelf
            wget https://github.com/NixOS/patchelf/releases/download/0.18.0/patchelf-0.18.0-x86_64.tar.gz
            tar xf *.tar.gz
            sudo cp bin/patchelf /usr/local/bin

      - name: Get the code
        uses: actions/checkout@v4

      - name: Build the wheel
        run: python${{ matrix.python_version }} -m build --wheel --outdir local-dist
      - name: Make the wheel machine-independent
        run: auditwheel repair --plat manylinux_2_31_x86_64 --strip local-dist/*.whl --wheel-dir dist
      - name: Check the wheel
        run: twine check dist/*.whl

      - name: Upload the wheel to GitHub Actions artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel-dist-${{ matrix.python_version }}-linux
          path: dist

  check:
    runs-on: ${{ matrix.os }}
    needs:
      - build-for-linux
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
        python_version: ['3.8', '3.13']
    steps:
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      # DO NOT install any other dependencies, to test that the wheels are self-contained

      - name: Download the wheels from GitHub Actions artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheel-dist-${{ matrix.python_version }}-*
          merge-multiple: true

      - name: Install the wheel
        run: pip${{ matrix.python_version }} install --find-links . --pre jacquev6-multiplatform-example

      - name: Run
        run: python${{ matrix.python_version }} -c "import example"
